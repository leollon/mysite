version: '3.7'

volumes:
  postgres: {}
  redis: {}
  captcha: {}

services:

  postgres:
    image: mysite/postgres:9.6-alpine
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    env_file:
      - ./.envs/.postgres
    volumes:
      - ./postgresql:/var/lib/postgresql
    networks:
      - blog-net
    ports:
      - "127.0.0.1:55432:5432"
    restart: always

  redis:
    image: redis:4.0-alpine
    volumes:
      - ./redis:/data
    networks:
      - blog-net
    ports:
      - "127.0.0.1:6369:6379"
    restart: always

  web:
    image: mysite/blog
    build:
      context: ./
      dockerfile: ./compose/mysite/Dockerfile  # the file contains the steps of build images
    entrypoint: /entrypoint
    command: /start             # The command runs in the containe
    volumes:
      - ./var:/mysite/var
      - ./run:/mysite/run
      - ./data:/mysite/data
      - ./captcha:/mysite/assets/images/captcha
      - ./markdown:/mysite/apps/article/management/markdown
    env_file:
      - ./.envs/.django
      - ./.envs/.postgres
    networks:
      - blog-net
    ports:
      - "127.0.0.1:8080:8080"  # web service port
      - "127.0.0.1:8085:8085"  # uwsgi status port
      - "127.0.0.1:5555:5555"  # flower service port
    depends_on:
      - postgres
      - redis
    restart: always

networks:
  blog-net:
    driver: bridge
